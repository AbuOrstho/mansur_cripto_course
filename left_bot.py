from itertools import count
from aiogram import Bot, Dispatcher, types
from aiogram.utils import executor
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.dispatcher import FSMContext
from aiogram.contrib.middlewares.logging import LoggingMiddleware
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from datetime import datetime
import logging

# –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –≤–∞—à —Ç–æ–∫–µ–Ω –∑–¥–µ—Å—å
API_TOKEN = '8101317125:AAHvwVN6izEW52xwrdopJjl8PvornFhGM_0'

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ –Ω–∞ —É—Ä–æ–≤–µ–Ω—å DEBUG –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞
logging.basicConfig(format="%(asctime)s - %(levelname)s - %(message)s", level=logging.DEBUG)

# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä—ã –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot, storage=MemoryStorage())
dp.middleware.setup(LoggingMiddleware())


class FeedbackForm(StatesGroup):
    waiting_for_feedback = State()


# –ó–∞–≥—Ä—É–∑–∫–∞ —á–µ—Ä–Ω–æ–≥–æ –∏ –±–µ–ª–æ–≥–æ —Å–ø–∏—Å–∫–∞
with open("blacklist.txt", "r", encoding="utf-8") as blacklist:
    blacklist_ids = {line.strip() for line in blacklist}

with open("whitelist.txt", "r", encoding="utf-8") as whitelist:
    whitelist_ids = {line.strip() for line in whitelist}


# –ö–æ–º–∞–Ω–¥–∞ /start
@dp.message_handler(commands=['start'])
async def start_command(message: types.Message):
    date_str = datetime.now().strftime('%Y-%m-%d')
    time_str = datetime.now().strftime('%H:%M:%S')
    user_id = message.from_user.id
    user_info = (
        f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.full_name} (@{message.from_user.username}), ID: {user_id} "
        f"–≤—ã–∑–≤–∞–ª –∫–æ–º–∞–Ω–¥—É /start –≤ {time_str} {date_str}."
    )

    # –°–æ–∑–¥–∞–µ–º –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ "–ü—Ä–∏–Ω—è—Ç—å" –∏ "–û—Ç–∫–ª–æ–Ω–∏—Ç—å"
    approval_keyboard = InlineKeyboardMarkup(row_width=2)
    approval_keyboard.add(
        InlineKeyboardButton("–ü—Ä–∏–Ω—è—Ç—å", callback_data=f"approve_{user_id}"),
        InlineKeyboardButton("–û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data=f"reject_{user_id}")
    )

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∞ –≤–∞—à ID
    await bot.send_message('789614280', user_info, reply_markup=approval_keyboard)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —á–µ—Ä–Ω–æ–º —Å–ø–∏—Å–∫–µ
    if str(message.from_user.id) not in blacklist_ids:
        await message.reply("""üëã–ê—Å—Å–∞–ª–∞–º—É 1–∞–ª–∞–π–∫—É–º, –≤—Å–µ—Ö –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ –Ω–∞—à –∫—É—Ä—Å –æ–±—É—á–µ–Ω–∏—è!
üîë–ó–¥–µ—Å—å —Ç—ã —É–∑–Ω–∞–µ—à—å –≤—Å–µ —á—Ç–æ –Ω—É–∂–Ω–æ –¥–ª—è —É—Å–ø–µ—à–Ω–æ–≥–æ —Å—Ç–∞—Ä—Ç–∞ –≤ —Ç—Ä–µ–π–¥–∏–Ω–≥–µ –∏ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–µ.

üìß–î–∞–Ω–Ω—ã–π –º–∏–Ω–∏-–∫—É—Ä—Å:
‚û°Ô∏è–Ω–∞—É—á–∏—Ç —Ç–µ–±—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å moneyüí∞
‚û°Ô∏è–Ω–∞—É—á–∏—Ç —Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ —Ä—ã–Ω–æ–∫ –±–æ–ª–µ–µ –≥–ª–æ–±–∞–ª—å–Ω–æ –∏ –Ω–∞—Ö–æ–¥–∏—Ç—å –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ –ø—Ä–∏–±—ã–ª—å–Ω—ã–µ —Å–∏—Ç—É–∞—Ü–∏–∏
‚û°Ô∏è—É–±–µ—Ä–µ–∂–µ—Ç –æ—Ç –æ—à–∏–±–æ–∫ –≤ –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏, –≤ —á–∞—Å—Ç–Ω–æ—Å—Ç–∏ –≤ —Ç—Ä–µ–π–¥–∏–Ω–≥–µ
‚û°Ô∏è–≤–æ—Å–ø–∏—Ç–∞–µ—Ç –≤ –≤–∞—Å –ø—Ä–æ—Ñ. —Ç—Ä–µ–π–¥–µ—Ä–∞

üß† –ó–¥–µ—Å—å —Ç—ã —É–∑–Ω–∞–µ—à—å:
1Ô∏è‚É£ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–∞–±–æ—Ç–µ –Ω–∞ —Ä—ã–Ω–∫–∞—Ö (–∫—Ä–∏–ø—Ç–æ, —Ñ–æ—Ä–µ–∫—Å, –∏–Ω–¥–µ–∫—Å—ã)
2Ô∏è‚É£ –û—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞ –¥–ª—è –Ω–æ–≤–∏—á–∫–æ–≤
3Ô∏è‚É£ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∫–∏–±–µ—Ä–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
4Ô∏è‚É£ –°–µ–∫—Ä–µ—Ç—ã –ø—Å–∏—Ö–æ–ª–æ–≥–∏–∏ —Ç—Ä–µ–π–¥–µ—Ä–∞
5Ô∏è‚É£ –ö–∞–∫ –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å —Ä–∏—Å–∫–∏
6Ô∏è‚É£ –ü–æ–ª–Ω—ã–π –∫–æ–º–ø–ª–µ–∫—Ç –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ç–æ—Ä–≥–æ–≤–ª–∏
7Ô∏è‚É£ –õ–æ–≥–∏–∫—É –¥–≤–∏–∂–µ–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–æ–≤
8Ô∏è‚É£ –ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å –¥–µ–Ω—å–≥–∏ –≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ

üí° –ü–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –ø—Ä–∏–º–µ—Ç —Ç–≤–æ—é –∑–∞—è–≤–∫—É, —Ç—ã —Å–º–æ–∂–µ—à—å –ø—Ä–∏—Å—Ç—É–ø–∏—Ç—å –∫ –æ–±—É—á–µ–Ω–∏—é –∏ –Ω–∞—á–∞—Ç—å –æ—Å–≤–∞–∏–≤–∞—Ç—å —ç—Ç–∏ –∑–Ω–∞–Ω–∏—è.

–û–∂–∏–¥–∞–π –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç –∞–¥–º–∏–Ω–∞ –∏ –±—É–¥—å –≥–æ—Ç–æ–≤ –Ω–∞—á–∞—Ç—å —Å–≤–æ–π –ø—É—Ç—å –∫ —É—Å–ø–µ—Ö—É!""")
    else:
        await message.reply(
            '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –±–∞–Ω–µ —É –¥–∞–Ω–Ω–æ–≥–æ –±–æ—Ç–∞. –î–ª—è —Ä–µ—à–µ–Ω–∏—è —ç—Ç–æ–π –ø—Ä–æ–±–ª–µ–º—ã –Ω–∞–ø–∏—à–∏—Ç–µ @w03lock'
        )


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–æ–∫ "–ü—Ä–∏–Ω—è—Ç—å" –∏ "–û—Ç–∫–ª–æ–Ω–∏—Ç—å"
@dp.callback_query_handler(lambda c: c.data and c.data.startswith(('approve_', 'reject_')))
async def process_callback(callback_query: types.CallbackQuery):
    action, user_id = callback_query.data.split('_')

    if action == "approve":
        if user_id not in whitelist_ids:
            with open("whitelist.txt", "a", encoding="utf-8") as file:
                file.write(f"{user_id}\n")
            whitelist_ids.add(user_id)

        # –ò–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –Ω–∞—á–∞–ª–∞ –∫—É—Ä—Å–∞
        course_keyboard = InlineKeyboardMarkup(row_width=2)
        course_keyboard.add(
            InlineKeyboardButton("–ù–∞—á–∞—Ç—å", callback_data="start_course"),
            InlineKeyboardButton("–ü–ª–∞–Ω", callback_data="plan_course")
        )
        await callback_query.answer("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏–Ω—è—Ç")

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        photo_url = 'photo/start_photo.jpg'
        caption = (
            "–í–∞—à –∑–∞–ø—Ä–æ—Å –±—ã–ª –ø—Ä–∏–Ω—è—Ç! üéì\n"
            "–ú—ã —Ä–∞–¥—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å —Ç–µ–±—è –Ω–∞ –ú–∏–Ω–∏-–∫—É—Ä—Å–µ –æ—Ç ComfortZone, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º —Ç—ã —É–∑–Ω–∞–µ—à—å:\n\n"
            "\n‚û°Ô∏è–ö–∞–∫–∏–µ –∑–Ω–∞–Ω–∏—è –∏ –Ω–∞–≤—ã–∫–∏ –Ω—É–∂–Ω—ã –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã —Ç–≤–æ—è —Ç–æ—Ä–≥–æ–≤–ª—è –±—ã–ª–∞ –ø—Ä–∏–±—ã–ª—å–Ω–æ–π"
            "\n‚û°Ô∏è–ö–∞–∫–∏–µ –≤–∏–¥—ã —Ä—ã–Ω–∫–æ–≤ —Å—É—â–µ—Å—Ç–≤—É—é—Ç –ø–æ–º–∏–º–æ –∫—Ä–∏–ø—Ç—ã"
            "\n‚û°Ô∏è–ê–±—Å–æ–ª—é—Ç–Ω–æ —Ä–∞–∑–Ω—ã–µ –∏ –ø—Ä–∏–±—ã–ª—å–Ω—ã–µ –ø–æ–¥—Ö–æ–¥—ã –∫ –∞–Ω–∞–ª–∏–∑—É –≥—Ä–∞—Ñ–∏–∫–∞"
        )
        await bot.send_photo(chat_id=user_id, photo=open(photo_url, "rb"), caption=caption,
                             reply_markup=course_keyboard)

    elif action == "reject":
        if user_id not in blacklist_ids:
            with open("blacklist.txt", "a", encoding="utf-8") as blacklist:
                blacklist.write(f"{user_id}\n")
            blacklist_ids.add(user_id)
        await callback_query.answer("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–∫–ª–æ–Ω–µ–Ω")
        await bot.send_message(user_id, "–í–∞—à –∑–∞–ø—Ä–æ—Å –±—ã–ª –æ—Ç–∫–ª–æ–Ω–µ–Ω.")

    await callback_query.message.edit_text(
        callback_query.message.text + f"\n\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {'–ø—Ä–∏–Ω—è—Ç' if action == 'approve' else '–æ—Ç–∫–ª–æ–Ω–µ–Ω'}."
    )


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–ù–∞—á–∞—Ç—å"
@dp.callback_query_handler(lambda c: c.data == "start_course")
async def start_course_handler(callback_query: types.CallbackQuery):
    await lesson_1(callback_query)
    await callback_query.answer()


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–ü–ª–∞–Ω"
@dp.callback_query_handler(lambda c: c.data == "plan_course")
async def start_course_handler(callback_query: types.CallbackQuery):
    await callback_query.message.answer("""–ü–ª–∞–Ω:

- –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∫—É—Ä—Å–∞ 

- –ß—Ç–æ —Ç—ã –ø–æ–ª—É—á–∏—à—å –Ω–∞ –æ–±—É—á–µ–Ω–∏–∏?

- –°–ª–æ–≤–∞—Ä—å

- ¬´–ò–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ - –±–∞–∑–æ–≤–∞—è –∑–∞–¥–∞—á–∞ –≤ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–º –æ–±—â–µ—Å—Ç–≤–µ¬ª

- –¢–æ–ø 5 –ø–ª–æ—Ö–∏—Ö —Å–ø–æ—Å–æ–±–æ–≤ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π 

- –ú–æ–∏ –¥–µ–π—Å—Ç–≤–∏—è, –µ—Å–ª–∏ –±—ã —è —Ç–æ–ª—å–∫–æ —Å–µ–π—á–∞—Å –∑–∞—Ö–æ—Ç–µ–ª –∑–∞–π—Ç–∏ –≤ –∫—Ä–∏–ø—Ç—É 

- –ì–ª–∞–≤–Ω—ã–µ –æ—à–∏–±–∫–∏ –Ω–æ–≤–∏—á–∫–æ–≤ –≤ —Ç—Ä–µ–π–¥–∏–Ω–≥–µ

- 5 –ø—Ä–∏–Ω—Ü–∏–ø–æ–≤ —É—Å–ø–µ—à–Ω–æ–≥–æ —Ç—Ä–µ–π–¥–µ—Ä–∞ 

- –ö–∞–∫ –≤ —Å–µ–±–µ —Ä–∞–∑–≤–∏—Ç—å –º—ã—à–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ. —Ç—Ä–µ–π–¥–µ—Ä–∞ 

–í–∏–¥–µ–æ-—É—Ä–æ–∫–∏:
- –ö—Ç–æ —Ç–∞–∫–æ–π —Ç—Ä–µ–π–¥–µ—Ä –∏ –ø–æ—á–µ–º—É –¥–∞–Ω–Ω–∞—è –ø—Ä–æ—Ñ–µ—Å—Å–∏—è –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–∞?
- –ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–Ω—ã–π —Ä—ã–Ω–æ–∫ 
- –§–æ—Ä–µ–∫—Å —Ä—ã–Ω–æ–∫
- –ò–Ω–¥–µ–∫—Å—ã
- –°–ª–æ–≤–∞—Ä—å —Å—Ç—Ä–µ–π–¥–µ—Ä–∞ 

- –ë–∏—Ä–∂–∏
- –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã 

- –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å

- –ü—Å–∏—Ö–æ–ª–æ–≥–∏—è —Ç—Ä–µ–π–¥–µ—Ä–∞ 
- –†–∏—Å–∫ –º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç

- –ü–∞—Ç—Ç–µ—Ä–Ω—ã
- –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã

- Smart Money

- –§–∞–∑—ã —Ä—ã–Ω–∫–∞ –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ 
- –õ–∏–∫–≤–∏–¥–Ω–æ—Å—Ç—å 

- –í–∞–π–∫–æ—Ñ—Ñ

- –û–∫–æ–ª–æ –∫—Ä–∏–ø—Ç–∞""")
    await callback_query.answer()


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∑–∞–Ω—è—Ç–∏—è
async def lesson_1(callback_query: types.CallbackQuery):
    lesson_1_kb = InlineKeyboardMarkup(row_width=1)
    lesson_1_kb.add(InlineKeyboardButton("–î–∞–ª—å—à–µ", callback_data="lesson_2"))
    with open("materials/–°–ª–æ–≤–∞—Ä—å.docx", "rb") as file:
        await bot.send_document(chat_id=callback_query.from_user.id, document=file)
    await callback_query.message.answer("–≠—Ç–æ –ø–µ—Ä–≤–æ–µ –∑–∞–Ω—è—Ç–∏–µ. –ú—ã –ø–æ—Å–º–æ—Ç—Ä–∏–º —Å–ª–æ–≤–∞—Ä—å —Ç–µ—Ä–º–∏–Ω–æ–≤ ", reply_markup=lesson_1_kb)


@dp.callback_query_handler(lambda c: c.data == "lesson_2")
async def lesson_2(callback_query: types.CallbackQuery):
    lesson_2_kb = InlineKeyboardMarkup(row_width=2)
    lesson_2_kb.add(
        InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="lesson_1"),
        InlineKeyboardButton("–î–∞–ª—å—à–µ", callback_data="lesson_3")
    )
    text = "<a href='https://telegra.ph/INVESTIROVAT---BAZOVAYA-ZADACHA-V-SOVREMENNOM-OBSHCHESTVE-11-03-2'>–ò–ù–í–ï–°–¢–ò–†–û–í–ê–¢–¨ - –ë–ê–ó–û–í–ê–Ø –ó–ê–î–ê–ß–ê –í –°–û–í–†–ï–ú–ï–ù–ù–û–ú –û–ë–©–ï–°–¢–í–ï</a>"
    await bot.send_photo(chat_id=callback_query.from_user.id, photo=open("photo/lesson2.jpg", "rb"), caption=text,
                         parse_mode="HTML", reply_markup=lesson_2_kb)


@dp.callback_query_handler(lambda c: c.data == "lesson_3")
async def lesson_3(callback_query: types.CallbackQuery):
    lesson_3_kb = InlineKeyboardMarkup(row_width=2)
    lesson_3_kb.add(
        InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="lesson_2"),
        InlineKeyboardButton("–î–∞–ª—å—à–µ", callback_data="lesson_4")
    )
    text = "<a href='https://telegra.ph/TOP-5-PLOHIH-SPOSOBOV-INVESTICIJ-11-03'>–¢–û–ü 5 –ü–õ–û–•–ò–• –°–ü–û–°–û–ë–û–í –ò–ù–í–ï–°–¢–ò–¶–ò–ô</a>"
    await bot.send_photo(chat_id=callback_query.from_user.id, photo=open("photo/lesson3.jpg", "rb"), caption=text,
                         parse_mode="HTML", reply_markup=lesson_3_kb)


@dp.callback_query_handler(lambda c: c.data == "lesson_4")
async def lesson_4(callback_query: types.CallbackQuery):
    lesson_4_kb = InlineKeyboardMarkup(row_width=2)
    lesson_4_kb.add(
        InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="lesson_3"),
        InlineKeyboardButton("–î–∞–ª—å—à–µ", callback_data="lesson_5")
    )
    text = (
        "*–ú–û–ò –î–ï–ô–°–¢–í–ò–Ø, –ï–°–õ–ò –ë–´ –Ø –¢–û–õ–¨–ö–û –°–ï–ô–ß–ê–° –ó–ê–•–û–¢–ï–õ –ó–ê–ô–¢–ò –í –ö–†–ò–ü–¢–£? üëÜ*\n\n"
        "‚û§ _–ü–æ—Å—á–∏—Ç–∞–ª –±—ã, —Å–∫–æ–ª—å–∫–æ —É –º–µ–Ω—è —Å–≤–æ–±–æ–¥–Ω—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤ —Å–µ–π—á–∞—Å –µ—Å—Ç—å –≤ —Ü–µ–ª–æ–º\\. –ò –≤—ã–¥–µ–ª–∏–ª —Ö–æ—Ç—è –±—ã 10% –Ω–∞ –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ –∫—Ä–∏–ø—Ç—É\\. –°–Ω–∞—á–∞–ª–∞ –Ω–∞ –Ω–µ–±–æ–ª—å—à–æ–π —Å—É–º–º–µ –Ω–∞–¥–æ ¬´–ø–æ—â—É–ø–∞—Ç—å¬ª –∏ –ø–æ–Ω—è—Ç—å, —á—Ç–æ —Ç–∞–∫–æ–µ ¬´–∫—É–ø–∏—Ç—å\\-–ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å\\-–ø—Ä–æ–¥–∞—Ç—å¬ª —Ç–æ–∫–µ–Ω, —É–≤–∏–¥–µ—Ç—å –ø–µ—Ä–≤—ã–π –ø—Ä–∏—Ä–æ—Å—Ç, –ø—É—Å—Ç—å –¥–∞–∂–µ –Ω–µ–±–æ–ª—å—à–æ–π\\)\\)\n\n"
        "> *–í–∞—à–∏ –¥–µ–Ω—å–≥–∏ —É–∂–µ –Ω–∞—á–Ω—É—Ç –¥–µ–ª–∞—Ç—å –¥–µ–Ω—å–≥–∏\\!* üí∞\n\n"
        "‚û§ _–ó–∞–Ω—è–ª—Å—è –±—ã –±–∞–∑–æ–≤–æ–π —Ñ–∏–Ω\\.–≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç—å—é\\. –¢–æ –µ—Å—Ç—å —Å –∫–∞–∂–¥–æ–≥–æ –¥–æ—Ö–æ–¥–∞ 10\\-20% –æ—Ç–∫–ª–∞–¥—ã–≤–∞–ª –±—ã –≤ –∫–∞–ø–∏—Ç–∞–ª\\. –ò–ª–∏ 10% –Ω–∞ –∫–∞–ø–∏—Ç–∞–ª, 10% –Ω–∞ –∫—Ä–∏–ø—Ç—É\\.\n\n"
        "‚û§ _–ü–æ–¥–ø–∏—Å–∞–ª—Å—è –±—ã –Ω–∞ ComfortZone_\n\n"
        "‚û§ _–ù–∏ –∑–∞ —á—Ç–æ –Ω–µ —Å—Ç–∞–ª –±—ã –∑–∞—Ö–æ–¥–∏—Ç—å –≤ —Å–¥–µ–ª–∫–∏, –≥–¥–µ ¬´—Ç–æ—á–Ω–æ –±—É–¥–µ—Ç —Ä–æ—Å—Ç x500%¬ª, —ç—Ç–æ —Å–∞–º—ã–π –ª—É—á—à–∏–π –ø—Ä–æ–µ–∫—Ç, –µ–≥–æ –ø—Ä–æ—Å—Ç–æ –Ω–µ–¥–æ–æ—Ü–µ–Ω–∏–ª–∏\\)_"
    )
    await callback_query.message.answer(text, parse_mode="MarkdownV2", reply_markup=lesson_4_kb)


@dp.callback_query_handler(lambda c: c.data == "lesson_5")
async def lesson_5(callback_query: types.CallbackQuery):
    lesson_5_kb = InlineKeyboardMarkup(row_width=2)
    lesson_5_kb.add(
        InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="lesson_4"),
        InlineKeyboardButton("–î–∞–ª—å—à–µ", callback_data="lesson_6")
    )
    text = "<a href='https://telegra.ph/Glavnye-oshibki-novichkov-v-trejdinge-11-03'>–ì–ª–∞–≤–Ω—ã–µ –æ—à–∏–±–∫–∏ –Ω–æ–≤–∏—á–∫–æ–≤ –≤ —Ç—Ä–µ–π–¥–∏–Ω–≥–µ:</a>"
    await bot.send_photo(chat_id=callback_query.from_user.id, photo=open("photo/lesson5.jpg", "rb"), caption=text,
                         parse_mode="HTML", reply_markup=lesson_5_kb)


@dp.callback_query_handler(lambda c: c.data == "lesson_6")
async def lesson_6(callback_query: types.CallbackQuery):
    lesson_6_kb = InlineKeyboardMarkup(row_width=2)
    lesson_6_kb.add(
        InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="lesson_5"),
        InlineKeyboardButton("–î–∞–ª—å—à–µ", callback_data="lesson_7")
    )
    text = "<a href='https://telegra.ph/5-principov-uspeshnogo-trejdera-11-03'>5 –ø—Ä–∏–Ω—Ü–∏–ø–æ–≤ —É—Å–ø–µ—à–Ω–æ–≥–æ —Ç—Ä–µ–π–¥–µ—Ä–∞:</a>"
    await bot.send_photo(chat_id=callback_query.from_user.id, photo=open("photo/lesson6.jpg", "rb"), caption=text,
                         parse_mode="HTML", reply_markup=lesson_6_kb)


@dp.callback_query_handler(lambda c: c.data == "lesson_7")
async def lesson_7(callback_query: types.CallbackQuery):
    lesson_7_kb = InlineKeyboardMarkup(row_width=2)
    lesson_7_kb.add(
        InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="lesson_6"),
        InlineKeyboardButton("–î–∞–ª—å—à–µ", callback_data="lesson_8")
    )
    text = "<a href='https://telegra.ph/Kak-razvit-v-sebe-myshlenie-professionalnogo-trejdera-11-03'>–ö–∞–∫ —Ä–∞–∑–≤–∏—Ç—å –≤ —Å–µ–±–µ –º—ã—à–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Ç—Ä–µ–π–¥–µ—Ä–∞?</a>"
    await bot.send_photo(chat_id=callback_query.from_user.id, photo=open("photo/lesson7.jpg", "rb"), caption=text,
                         parse_mode="HTML", reply_markup=lesson_7_kb)


@dp.callback_query_handler(lambda c: c.data == "lesson_8")
async def lesson_8(callback_query: types.CallbackQuery):
    lesson_8_kb = InlineKeyboardMarkup(row_width=2)
    lesson_8_kb.add(
        InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="lesson_7"),
        InlineKeyboardButton("–î–∞–ª—å—à–µ", callback_data="lesson_9")
    )

    await callback_query.message.answer("""‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî

‚ùóÔ∏è–ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –≤–∏–¥–µ–æ-—É—Ä–æ–∫–∞–º ‚ùóÔ∏è

‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî""")

    # Text with description and link (escape special symbols for MarkdownV2 if necessary)
    caption = """<u>–£—Ä–æ–∫ 1</u>
- –ö—Ç–æ —Ç–∞–∫–æ–π —Ç—Ä–µ–π–¥–µ—Ä –∏ –ø–æ—á–µ–º—É –¥–∞–Ω–Ω–∞—è –ø—Ä–æ—Ñ–µ—Å—Å–∏—è –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–∞?
- –ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–Ω—ã–π —Ä—ã–Ω–æ–∫
- –§–æ—Ä–µ–∫—Å —Ä—ã–Ω–æ–∫
- –ò–Ω–¥–µ–∫—Å—ã"""

    await bot.send_video(
        chat_id=callback_query.from_user.id,
        video="BAACAgIAAyEFAASJgBueAANKZyvoeCEUmWsdRALM96UpjzcqRhAAAsxgAAKrsWFJLlvhgK3pakk2BA",
        caption=caption,
        reply_markup=lesson_8_kb,
        parse_mode="HTML"
    )


@dp.callback_query_handler(lambda c: c.data == "lesson_9")
async def lesson_9(callback_query: types.CallbackQuery):
    lesson_9_kb = InlineKeyboardMarkup(row_width=2)
    lesson_9_kb.add(
        InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="lesson_8"),
        InlineKeyboardButton("–î–∞–ª—å—à–µ", callback_data="lesson_10")
    )
    # Text with description and link (escape special symbols for MarkdownV2 if necessary)
    caption = """<u>–ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–Ω—ã–π —Ä—ã–Ω–æ–∫</u>"""

    await bot.send_video(
        chat_id=callback_query.from_user.id,
        video="BAACAgIAAyEFAASJgBueAANMZyvpVLtzlKdQV-xb21wuZmfGN6IAAtBgAAKrsWFJAAFrqC2fyBSxNgQ",
        caption=caption,
        reply_markup=lesson_9_kb,
        parse_mode="HTML"
    )


@dp.callback_query_handler(lambda c: c.data == "lesson_10")
async def lesson_10(callback_query: types.CallbackQuery):
    lesson_10_kb = InlineKeyboardMarkup(row_width=2)
    lesson_10_kb.add(
        InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="lesson_9"),
        InlineKeyboardButton("–î–∞–ª—å—à–µ", callback_data="lesson_11")
    )
    # Text with description and link (escape special symbols for MarkdownV2 if necessary)
    caption = """<u>–§–æ—Ä–µ–∫—Å —Ä—ã–Ω–æ–∫</u>"""

    await bot.send_video(
        chat_id=callback_query.from_user.id,
        video="BAACAgIAAyEFAASJgBueAANOZyvpkHlpK6xogeRJNiDGVoQVv5oAAtJgAAKrsWFJc2ro7adoh1g2BA",
        caption=caption,
        reply_markup=lesson_10_kb,
        parse_mode="HTML"
    )


@dp.callback_query_handler(lambda c: c.data == "lesson_11")
async def lesson_11(callback_query: types.CallbackQuery):
    lesson_11_kb = InlineKeyboardMarkup(row_width=2)
    lesson_11_kb.add(
        InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="lesson_9"),
        InlineKeyboardButton("–î–∞–ª—å—à–µ", callback_data="lesson_12")
    )
    # Text with description and link (escape special symbols for MarkdownV2 if necessary)
    caption = """<u>–ò–Ω–¥–µ–∫—Å—ã</u>"""

    await bot.send_video(
        chat_id=callback_query.from_user.id,
        video="BAACAgIAAyEFAASJgBueAANQZyvptqW9tYQAAfHtBxvbgrIZUeEEAALTYAACq7FhSa4pcz7R5xddNgQ",
        caption=caption,
        reply_markup=lesson_11_kb,
        parse_mode="HTML"
    )


@dp.callback_query_handler(lambda c: c.data == "lesson_12")
async def lesson_12(callback_query: types.CallbackQuery):
    lesson_12_kb = InlineKeyboardMarkup(row_width=2)
    lesson_12_kb.add(
        InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="lesson_11"),
        InlineKeyboardButton("–î–∞–ª—å—à–µ", callback_data="lesson_13")
    )
    # Text with description and link (escape special symbols for MarkdownV2 if necessary)
    caption = """<u>–£—Ä–æ–∫ 2</u>
- –ë–∏—Ä–∂–∏
- –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã"""

    await bot.send_video(
        chat_id=callback_query.from_user.id,
        video="BAACAgIAAyEFAASJgBueAANSZyvqyyLWRBVk7-Qz41wRdINiSz0AAthgAAKrsWFJ2LzS3wYlBTI2BA",
        caption=caption,
        reply_markup=lesson_12_kb,
        parse_mode="HTML"
    )


@dp.callback_query_handler(lambda c: c.data == "lesson_13")
async def lesson_13(callback_query: types.CallbackQuery):
    lesson_13_kb = InlineKeyboardMarkup(row_width=2)
    lesson_13_kb.add(
        InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="lesson_12"),
        InlineKeyboardButton("–î–∞–ª—å—à–µ", callback_data="lesson_14")
    )
    # Text with description and link (escape special symbols for MarkdownV2 if necessary)
    caption = """<u>–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã</u>"""

    await bot.send_video(
        chat_id=callback_query.from_user.id,
        video="BAACAgIAAyEFAASJgBueAANUZyvretfofI2uotbZ4zD26PcSb28AAttgAAKrsWFJ6ZXHI-1Zasg2BA",
        caption=caption,
        reply_markup=lesson_13_kb,
        parse_mode="HTML"
    )


@dp.callback_query_handler(lambda c: c.data == "lesson_14")
async def lesson_14(callback_query: types.CallbackQuery):
    lesson_14_kb = InlineKeyboardMarkup(row_width=2)
    lesson_14_kb.add(
        InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="lesson_13"),
        InlineKeyboardButton("–î–∞–ª—å—à–µ", callback_data="lesson_15")
    )
    # Text with description and link (escape special symbols for MarkdownV2 if necessary)
    caption = """<u>–£—Ä–æ–∫ 3</u>
- –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –≤ –∫—Ä–∏–ø—Ç–µ"""

    await bot.send_video(
        chat_id=callback_query.from_user.id,
        video="BAACAgIAAyEFAASJgBueAANWZyvsrLZn6SDZozxsQIxdbzwZL7AAAtxgAAKrsWFJSF9oNejqZeo2BA",
        caption=caption,
        reply_markup=lesson_14_kb,
        parse_mode="HTML"
    )


@dp.callback_query_handler(lambda c: c.data == "lesson_15")
async def lesson_15(callback_query: types.CallbackQuery):
    lesson_15_kb = InlineKeyboardMarkup(row_width=2)
    lesson_15_kb.add(
        InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="lesson_14"),
        InlineKeyboardButton("–î–∞–ª—å—à–µ", callback_data="lesson_16")
    )
    # Text with description and link (escape special symbols for MarkdownV2 if necessary)
    caption = """<u>–£—Ä–æ–∫ 4</u>
- –ü—Å–∏—Ö–æ–ª–æ–≥–∏—è —Ç—Ä–µ–π–¥–µ—Ä–∞
- –†–∏—Å–∫ –º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç"""

    await bot.send_video(
        chat_id=callback_query.from_user.id,
        video="BAACAgIAAyEFAASJgBueAANYZyvs9ikWWEvfVvEhO-xct0FIQd8AAt1gAAKrsWFJXSpNl4rlmTA2BA",
        caption=caption,
        reply_markup=lesson_15_kb,
        parse_mode="HTML"
    )


@dp.callback_query_handler(lambda c: c.data == "lesson_16")
async def lesson_16(callback_query: types.CallbackQuery):
    lesson_16_kb = InlineKeyboardMarkup(row_width=2)
    lesson_16_kb.add(
        InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="lesson_15"),
        InlineKeyboardButton("–î–∞–ª—å—à–µ", callback_data="lesson_17")
    )
    # Text with description and link (escape special symbols for MarkdownV2 if necessary)
    caption = """<u>–†–∏—Å–∫ –º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç</u>"""

    await bot.send_video(
        chat_id=callback_query.from_user.id,
        video="BAACAgIAAyEFAASJgBueAANaZyvtM2YZ2MDUgT4LRZyVbQABUXwPAALgYAACq7FhSaRXvCcQwYI_NgQ",
        caption=caption,
        reply_markup=lesson_16_kb,
        parse_mode="HTML"
    )


@dp.callback_query_handler(lambda c: c.data == "lesson_17")
async def lesson_17(callback_query: types.CallbackQuery):
    lesson_17_kb = InlineKeyboardMarkup(row_width=2)
    lesson_17_kb.add(
        InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="lesson_16"),
        InlineKeyboardButton("–î–∞–ª—å—à–µ", callback_data="lesson_18")
    )
    # Text with description and link (escape special symbols for MarkdownV2 if necessary)
    caption = """<u>–£—Ä–æ–∫ 5</u>
–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π —Ç–µ—Ö. –∞–Ω–∞–ª–∏–∑
- –ü–∞—Ç—Ç–µ—Ä–Ω—ã
- –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã"""

    await bot.send_video(
        chat_id=callback_query.from_user.id,
        video="BAACAgIAAyEFAASJgBueAANcZyvtYMd_OrV9g1Coyvz-Bwwz7joAAuNgAAKrsWFJwQm6L9elp_82BA",
        caption=caption,
        reply_markup=lesson_17_kb,
        parse_mode="HTML"
    )


@dp.callback_query_handler(lambda c: c.data == "lesson_18")
async def lesson_18(callback_query: types.CallbackQuery):
    lesson_18_kb = InlineKeyboardMarkup(row_width=2)
    lesson_18_kb.add(
        InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="lesson_17"),
        InlineKeyboardButton("–î–∞–ª—å—à–µ", callback_data="lesson_19")
    )
    # Text with description and link (escape special symbols for MarkdownV2 if necessary)
    caption = """<u>–ò–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã</u>"""

    await bot.send_video(
        chat_id=callback_query.from_user.id,
        video="BAACAgIAAyEFAASJgBueAANeZyvtuUt5GllFHKNse8ASy7HceXMAAulgAAKrsWFJ5HUXK_JSvoo2BA",
        caption=caption,
        reply_markup=lesson_18_kb,
        parse_mode="HTML"
    )


@dp.callback_query_handler(lambda c: c.data == "lesson_19")
async def lesson_19(callback_query: types.CallbackQuery):
    lesson_19_kb = InlineKeyboardMarkup(row_width=2)
    lesson_19_kb.add(
        InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="lesson_18"),
        InlineKeyboardButton("–î–∞–ª—å—à–µ", callback_data="lesson_20")
    )
    # Text with description and link (escape special symbols for MarkdownV2 if necessary)
    caption = """<u>–£—Ä–æ–∫ 6</u>
- Smart money"""

    await bot.send_video(
        chat_id=callback_query.from_user.id,
        video="BAACAgIAAyEFAASJgBueAANgZyvt_ndnpO0dxGhmRPh9EHErE3sAAupgAAKrsWFJ2SDfpLkTZ9U2BA",
        caption=caption,
        reply_markup=lesson_19_kb,
        parse_mode="HTML"
    )


@dp.callback_query_handler(lambda c: c.data == "lesson_20")
async def lesson_20(callback_query: types.CallbackQuery):
    lesson_20_kb = InlineKeyboardMarkup(row_width=2)
    lesson_20_kb.add(InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="lesson_19"),
                     InlineKeyboardButton("–î–∞–ª—å—à–µ", callback_data="lesson_21"))
    # Text with description and link (escape special symbols for MarkdownV2 if necessary)
    caption = """<u>–£—Ä–æ–∫ 7</u>
–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∏ –ª–∏–∫–≤–∏–¥–Ω–æ—Å—Ç—å
- –§–∞–∑—ã —Ä—ã–Ω–∫–∞ –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞
- –õ–∏–∫–≤–∏–¥–Ω–æ—Å—Ç—å"""

    await bot.send_video(
        chat_id=callback_query.from_user.id,
        video="BAACAgIAAyEFAASJgBueAANiZyvuh6IRSw-KMNqXrOCASfc4MboAAu5gAAKrsWFJibNDhK7OqyE2BA",
        caption=caption,
        reply_markup=lesson_20_kb,
        parse_mode="HTML"
    )


@dp.callback_query_handler(lambda c: c.data == "lesson_21")
async def lesson_21(callback_query: types.CallbackQuery):
    lesson_21_kb = InlineKeyboardMarkup(row_width=2)
    lesson_21_kb.add(
        InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="lesson_20"),
        InlineKeyboardButton("–î–∞–ª—å—à–µ", callback_data="lesson_22")
    )
    # Text with description and link (escape special symbols for MarkdownV2 if necessary)
    caption = """<u>–õ–∏–∫–≤–∏–¥–Ω–æ—Å—Ç—å</u>"""

    await bot.send_video(
        chat_id=callback_query.from_user.id,
        video="BAACAgIAAyEFAASJgBueAANkZyvuqpmC0u2qlIzV_7OqUx3527wAAu9gAAKrsWFJd3fuRR50EZs2BA",
        caption=caption,
        reply_markup=lesson_21_kb,
        parse_mode="HTML"
    )


@dp.callback_query_handler(lambda c: c.data == "lesson_22")
async def lesson_22(callback_query: types.CallbackQuery):
    lesson_22_kb = InlineKeyboardMarkup(row_width=2)
    lesson_22_kb.add(
        InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="lesson_21"),
        InlineKeyboardButton("–î–∞–ª—å—à–µ", callback_data="lesson_23")
    )
    # Text with description and link (escape special symbols for MarkdownV2 if necessary)
    caption = """<u>–£—Ä–æ–∫ 8</u>
- –í–∞–π–∫–æ—Ñ—Ñ"""

    await bot.send_video(
        chat_id=callback_query.from_user.id,
        video="BAACAgIAAyEFAASJgBueAANmZyvvNSSWX7h1mziqwTWr3MlxuAQAAvFgAAKrsWFJ499JcFh5V7Q2BA",
        caption=caption,
        reply_markup=lesson_22_kb,
        parse_mode="HTML"
    )


@dp.callback_query_handler(lambda c: c.data == "lesson_23")
async def lesson_23(callback_query: types.CallbackQuery):
    lesson_23_kb = InlineKeyboardMarkup(row_width=2)
    lesson_23_kb.add(
        InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="lesson_22"),
        InlineKeyboardButton("–î–∞–ª—å—à–µ", callback_data="lesson_24")
    )
    # Text with description and link (escape special symbols for MarkdownV2 if necessary)
    caption = """–£—Ä–æ–∫ 9
- –æ–∫–æ–ª–æ –∫—Ä–∏–ø—Ç–∞
( –Ω–∞ —á–µ–º –µ—â–µ –º–æ–∂–Ω–æ –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å )"""

    await bot.send_video(
        chat_id=callback_query.from_user.id,
        video="BAACAgIAAyEFAASJgBueAANoZyvvkZhV6AqZRXEpNzMwejyTfRcAAvJgAAKrsWFJteEml5io_-g2BA",
        caption=caption,
        reply_markup=lesson_23_kb,
        parse_mode="HTML"
    )


@dp.callback_query_handler(lambda c: c.data == "lesson_24")
async def lesson_24(callback_query: types.CallbackQuery):
    lesson_24_kb = InlineKeyboardMarkup(row_width=2)
    lesson_24_kb.add(
        InlineKeyboardButton("–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤", callback_data="feedback"),
        InlineKeyboardButton("–ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å –ø—Ä–æ–µ–∫—Ç ‚ù§Ô∏è", callback_data="donat")
    )

    await bot.send_message(chat_id=callback_query.from_user.id,
                           text="""–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, –≤—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—à–ª–∏ –Ω–∞—à –º–∏–Ω–∏-–∫—É—Ä—Å –æ—Ç ComfortZone!

–ù–∞–¥–µ—é—Å—å, —á—Ç–æ –≤—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è, –∫–æ—Ç–æ—Ä—É—é –í—ã –ø–æ–ª—É—á–∏–ª–∏, –æ–∫–∞–∑–∞–ª–∞—Å—å –¥–ª—è –≤–∞—Å –ø–æ–ª–µ–∑–Ω–æ–π. –í—Å–µ–≥–¥–∞ –ø–æ–º–Ω–∏—Ç–µ –æ –≤–∞–∂–Ω–æ—Å—Ç–∏ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω—ã, —Ö–æ–ª–æ–¥–Ω–æ–π –≥–æ–ª–æ–≤—ã –ø—Ä–∏ –ø–æ–¥—Ö–æ–¥–µ –∫ —Ç—Ä–µ–π–¥—É, —Å–æ–±–ª—é–¥–µ–Ω–∏–∏ —Ä–∏—Å–∫-–º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç–∞!

–ò –Ω–µ –∑–∞–±—ã–≤–∞–π—Ç–µ - –Ω–∞ —Ñ—å—é—á–µ—Ä—Å—ã –Ω–µ –ª–µ–∑–µ–º ‚ùå. –û–Ω–ª–∏ –°–ü–û–¢
–í—Å–µ–º —É–¥–∞—á–∏ –∏ —Ö–æ—Ä–æ—à–µ–≥–æ —É—Ä–æ–∂–∞—è !


üìò –°–æ—Å—Ç–∞–≤–∏—Ç–µ–ª—å –∫—É—Ä—Å–∞: @w03lock
üë®‚Äçüíª –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –±–æ—Ç–∞: @vay_ahi
""",
                           reply_markup=lesson_24_kb)


@dp.callback_query_handler(lambda c: c.data == "feedback")
async def lesson_24(callback_query: types.CallbackQuery):
    await callback_query.message.answer("""–ú—ã –±—É–¥–µ–º —Ä–∞–¥—ã —É–∑–Ω–∞—Ç—å –≤–∞—à–µ –º–Ω–µ–Ω–∏–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Å—Ç–∞–≤—å—Ç–µ –æ—Ç–∑—ã–≤ –æ –∫—É—Ä—Å–µ ‚Äî —ç—Ç–æ –ø–æ–º–æ–∂–µ—Ç –Ω–∞–º —É–ª—É—á—à–∏—Ç—å –æ–±—É—á–µ–Ω–∏–µ –∏ —Å–¥–µ–ª–∞—Ç—å –µ–≥–æ –µ—â–µ –ø–æ–ª–µ–∑–Ω–µ–µ –¥–ª—è –±—É–¥—É—â–∏—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤.

‚úçÔ∏è –ù–∞–ø–∏—à–∏—Ç–µ, —á—Ç–æ –≤–∞–º –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å –∏ —á—Ç–æ, –ø–æ –≤–∞—à–µ–º—É –º–Ω–µ–Ω–∏—é, –º–æ–∂–Ω–æ —É–ª—É—á—à–∏—Ç—å.

–í–∞—à –æ—Ç–∑—ã–≤ –æ—á–µ–Ω—å –≤–∞–∂–µ–Ω –¥–ª—è –Ω–∞—Å! –ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å –∏ —É–¥–∞—á–∏ –Ω–∞ –≤–∞—à–µ–º –ø—É—Ç–∏ –≤ –º–∏—Ä–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç! üöÄ""")
    await FeedbackForm.waiting_for_feedback.set()


@dp.message_handler(state=FeedbackForm.waiting_for_feedback, content_types=types.ContentType.TEXT)
async def process_feedback(message: types.Message, state: FSMContext):
    feedback_text = message.text
    user_info = f"–û—Ç–∑—ã–≤ –æ—Ç @{message.from_user.username} (ID: {message.from_user.id}):\n\n{feedback_text}"

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–∑—ã–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
    await bot.send_message('789614280', user_info)

    # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await message.answer("–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –æ—Ç–∑—ã–≤! –û–Ω –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.")

    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await state.finish()


@dp.callback_query_handler(lambda c: c.data == "donat")
async def lesson_24(callback_query: types.CallbackQuery):
    await callback_query.message.answer("""
–í–æ—Ç —Ç–µ–∫—Å—Ç –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ –¥–æ–Ω–∞—Ç–∞:

–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–¥–µ—Ä–∂–∫—É! üôè

–í–∞—à –≤–∫–ª–∞–¥ –ø–æ–º–æ–≥–∞–µ—Ç –Ω–∞–º —Ä–∞–∑–≤–∏–≤–∞—Ç—å –±–æ—Ç–∞, –¥–æ–±–∞–≤–ª—è—Ç—å –Ω–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏ —É–ª—É—á—à–∞—Ç—å —Å–µ—Ä–≤–∏—Å –¥–ª—è –≤–∞—Å. –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –≤–Ω–µ—Å—Ç–∏ –¥–æ–Ω–∞—Ç. 
–ú—ã –±–ª–∞–≥–æ–¥–∞—Ä–Ω—ã –∫–∞–∂–¥–æ–º—É, –∫—Ç–æ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –Ω–∞—à –ø—Ä–æ–µ–∫—Ç!

–°–±–µ—Ä–±–∞–Ω–∫
2202 2068 3313 3031
–ú–∞–Ω—Å—É—Ä –¢.""")



if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
